/* 
  Localizable.strings
  Aexels

  Created by Joe Charlier on 7/18/14.
  Copyright (c) 2014 Aepryus Software. All rights reserved.
*/

"Forward" = "Forward to v3.0

Since the discovery of Universe X in 2013, there have been 7 light bulb moments including that first.  This app was started in 2014 after 4 of the light bulb moments.  A 5th light bulb moment occurred while it was being worked on; it was released a few days before the start of 2015.

Since that time 2 additional light bulb moments have occurred, the first of which had sizable implications for many of the original articles.  But, I chose to leave them largely untouched and just tacked on an additional article in order to show the path of discovery.

However, with this version I am choosing to rewrite all of the articles based on the complete current understanding of Universe X.  I'm also going to integrate the paragraphs in the old 'Odds and Ends' into their relevant articles (mainly Dilation).

There are also two new articles in version 3.0:
- Discrepancy, which discusses the 7th light bulb moment, the discovery of a substantial difference between Universe X and our Universe.
- Epilogue, where I will give short answers to a number of questions that are very difficult to answer for our Universe, but quite easy to answer for Universe X.

Unfortunately, there are no new explorers in version 3.0.  I am working on about 10 mid sized projects related to Oovium, Aexels, Evolizer and others things that I'd like to get out as quickly as possible.  After, I complete those projects I will try to implement the Dilation and Contraction explorers.

    - Joe





";

"Intro" = "A universe is discovered…

Universe X

Come along as we explore this new universe and discover the similarities and differences it has with our own.

There are things we know for certain about Universe X; there are things we can speculate about and there are many things yet to be discovered.  Hopefully, over the life time of this app we will be able to continually increase our knowledge and understanding of this new world.

This app is divided into sections that each describe a different aspect of Universe X.  Eventually each of these sections will also contain an exploration screen that will allow the user to see each aspect modeled visually.

Currently there are explorers for Cellular Automata, Kinematics and Gravity.  The Cellular Automata explorer will allow the user to view a number of famous Cellular Automata and will also allow users to define and execute their own Cellular Automata using the Oovium visual programming language.  The Kinematics explorer compares simple motion in our Universe to that in Universe X.  The Gravity explorer attempts to qualitatively model the crystalline nature of Aexels themselves.

So what is Universe X?

Universe X is quite different from our own.  Our universe can, at times, seem quite magical: space curves, time dilates and both are intertwined with one another; it contains dark matter and dark energy; it is expanding and expanding at an increasing rate; God plays dice with our universe.

In contrast, Universe X is quite simple; it has no magic at all.  Universe X is entirely mechanistic.  It follows a few simple rules which are easy to understand and (hopefully) easy to model.

In the 19th century it was speculated that the space between planets and stars contained a fluid called the aether that was analogous to air.  This aether was the medium that allowed light waves to propagate, just as air is the medium that allows sound waves to propagate.  At the beginning of the 20th century with the discovery of Special Relativity it was realized that this aether does not exist in our universe.

In Universe X, however, not only does the aether exist, fundamentally, it is the only thing that exists.  But this aether, the aether of Universe X, has very little in common with the 19th century concept of aether.

The 19th century concept of aether was that of a fluid that the planets and stars moved through and displaced, just as an object moving in air or water displaces each of those fluids.  For example, as an airplane flies through the sky, air collides with it and flows along the surface of the craft.  It was believed that there must be a similar substance in space that both collides with and flows along the surface of the planets as they orbit the sun.

In 1887, Michelson and Morley performed their famous experiment looking for the flow of that aether along the surface of the Earth.  They were shocked to discover that no such flow existed.

In Universe X, the aether is not a substance that is displaced by planets and stars.  Rather, in Universe X, the aether is a substance upon which the matter of the universe sits.  It is the canvas upon which the painting appears; it is the game board upon which the chess pieces move.  The planets, the stars and ALL matter in Universe X sit atop of this aether and smoothly slide along it.

And like a computer monitor that is divided into a 2 dimensional grid of cells, called pixels (from 'picture elements' or 'picture cells'), each displaying a single color in order to render an entire image, the aether of Universe X is divided into a number of small 3 dimensional cells called aexels (from 'aether elements' or 'aether cells').

Currently, there are a few things we know about these aexels.  Like the atoms of a liquid, they can move and flow.  Like the atoms of a crystal lattice, they repulse when they get too close and attract when they get too far.  As such, the aether is compressible; the density of the aexels can vary, sometimes bunching up, other times spreading out.

These aexels have state.  Just as each pixel of a screen has a three dimensional state representing red, green and blue, each aexel also has a multidimensional state.  This state can change over time.  The changing of state in one aexel can, after a short delay, cause the change of state in neighboring aexels.

And perhaps most shockingly, based on those states, new aexels can be created and existing aexels can be destroyed.

At a base level, aexels are the only thing that exist in Universe X.  However, Universe X also has two other aspects: space and time.  Unlike our own universe where space and time are quite magical notions, where space can curve and time can dilate and each is intimately intertwined with one another, in Universe X, space and time are quite intuitive and boring.

Space in Universe X does not curve or expand; it is simply a three dimensional construct which houses the aexels.  Time in Universe X does not dilate; it is simply a one dimensional construct moving at a constant rate from past to present to future, mediating the progression of the state changes of the aexels as well as their motion.  In Universe X, space and time are entirely separate notions that are not intertwined at all.

Of course, these facts about the aexels of Universe X leave many questions unanswered.  For example, what is the exact equation of force between individual aexels?  Does the notion of momentum exist for aexels?  How many dimensions of state are there?  Answering these questions and many more will be the primary focus of this app for years to come.

As such, let our exploration begin…





";

"CellularAutomata" = "Cellular Automata

A cellular automaton is a system consisting of a grid (often times 2 dimensional) of cells each having state, which could be a simple on/off or could be any number of scalar and/or vector values.

The system progresses using a discrete concept of time called a time step.  Inherent in the system is a static set of rules that dictate how the state of each cell progresses for each time step.  This progression is a function of the current state of the cell and the state of the cell's neighbors.

For example, perhaps the most famous cellular automaton is Conway's Game of Life.  In Conway's game of life the world consists of a 2 dimensional square grid of cells.  Each cell can be either on or off.  The neighbors of a cell consist of the 8 cells directly surrounding it.  If exactly 2 neighbors are on, then the state of the cell will not change.  If exactly 3 neighbors are on then the state of the cell will be turned/remain on.  In all other cases the state of the cell will be turned/remain off.

This simple set of rules is able to exhibit an amazing amount of complexity.  Initially, when the cells of such a system are randomly populated the progression of state will be quite chaotic.  However, over time, patterns will automatically arise.

For example, if a closed subset of cells has a certain state at time t and that subset of cells returns to that same state at a later time, the cells will be in a stable state loop and continue that loop into perpetuity (or until it is disrupted somehow, i.e., stops being a closed subset).  Perhaps the cells remain in the same state each time step giving the loop a period of 1.  Or perhaps the cells loop back after 2, 3 or more steps, giving their loop a period of 2, 3 or more steps.

Such simple cellular automata have a number of similarities to Universe X.  For example Universe X is also made up of a set of discrete cells, in this case 3 dimensional.  These cells also have state and the state changes of these cells often loop back creating stable state loops.

In Universe X these loops can persist for long periods of time, have properties of their own and interact with other stable state loops.  These stable state loops are the basis of all \"matter\" in Universe X.

The matter of Universe X is not fundamental.  It is an artifact of the properties of aexels. It is not made up of particles; it is not made up of waves; it does not displace the aether.  Matter is made up of stable state loops that exist on top of the aether.

However, there are also some differences between Universe X and most cellular automata.  Unlike the static cells of Conway's game of life, the cells of Universe X are dynamic; they can move, they can be created and they can be destroyed.

The aexels of Universe X are created and destroyed as a direct result of the state changes of the aexels themselves.  The aexels move because they exert a force on one another, but ultimately this motion is first initiated by the creation and destruction of the aexels themselves.

Another somewhat speculative difference is that although the new states of our simple cellular automata are usually based on the current states of the cell and their neighbors, it is probably the case that the state change of an aexel is a function of the change of state rather than just the absolute state of the neighborhood.

In a cellular automaton, a computer will calculate each time step in its entirety before moving the system forward.  There is no such master computer in Universe X.  There is simply a time delay in transferring a state change from one aexel to its neighbors.  In Universe X this delay is called a 'tic'.

Each aexel in Universe X can only directly affect its neighbors and this effect takes one tic of time to occur.  Therefore the fastest a signal can move across a field of aexels in Universe X is one aexel per tic.

In Universe X, one aexel per tic is referred to as 'the speed of light'.





";

"Kinematics" = "Kinematics

Kinematics is the study of motion absent of force.  In our universe, such motion is quite straightforward.  Generally things in Universe X are less complicated than in our own universe, but in this case things in Universe X are considerably more complicated.

In the Cellular Automata section, a stable state loop was described as a closed set of cells with a certain state at time t, that returns to that same state at some later time.  However, this definition is perhaps unnecessarily restrictive.

If one observes Conway's Game of Life long enough they may notice a very interesting phenomenon.  Occasionally a pattern of cells arise that while persisting; does not do so in place; it \"moves\".  The most common such stable state loop in Game of Life is called a glider, which repeats its pattern every 4 time steps while translating diagonally by one cell during those 4 time steps.

Similarly, all of the stable state loops in Universe X have the ability to translate across a field of aexels.  However, due to the 'tic' time delay in transferring state from one aexel to its neighbor, this motion is strictly bound by the 'speed of light' (i.e., one aexel per tic).  This translation is one of the forms of motion possible in Universe X.

But there is another entirely different way in which a stable state loop can move.  Since the aexels themselves can move, it is possible for a stable state loop that is not translating across an aexel field at all, to simply move along with aexels it is sitting upon, like a leaf floating down a stream.  And since this motion is not dependent on the signal delay between neighboring aexels, its speed is in no way bounded.

And of course a stable state loop could be (and most of the time probably is) experiencing both of these forms of motion simultaneously.

There are some rather sticky ramifications to all of this.  In our universe a single particle moving in the absence of force can be described entirely by a velocity vector (ignoring quantum effects for the time being).  In Universe X, in order to accurately understand the motion of a stable state loop it is necessary to know the translating velocity of the loop measured in aexels per time as well as both the velocity of the aexels measured in distance per time and density of those same aexels, which in a simple system could be constant, but in more complex situations could vary from place to place.





";

"Gravity" = "Gravity

Gravity is the tendency of objects with mass to move towards one another.

Isaac Newton first described the Gravity of our universe as a force that all objects exert on one another across any arbitrarily large distance, proportional to their mass and inversely proportional to the square of the distance between them.  But, he acknowledged some discomfort with this idea:

\"That one body may act upon another at a distance through a vacuum without the mediation of anything else, by and through which their action and force may be conveyed from one another, is to me so great an absurdity that, I believe, no man who has in philosophic matters a competent faculty of thinking could ever fall into it.\"

When Albert Einstein described his theory of Relativity he shifted our understanding of Gravity.  He described gravity as being a result of the warping of spacetime caused by all objects with mass.

But, even with Newton and Einstein's contributions to Gravity we still really don't understand what Gravity is and why it exists.  In our own universe, Gravity remains a mystery.

But, in Universe X, Gravity is a quite simple and mundane phenomenon.

In Universe X there exists many different types of stable state loops.  There are potentially three ways these loops could interact with the aexels:

- they could destroy aexels:
It is quite certain that there are loops that destroy aexels in Universe X.  In Universe X these loops are referred to as 'matter'.  This article, 'Gravity', pertains to these types of loops.

- they could create aexels:
That there exists loops that create aexels in Universe X is somewhat speculative, but for a number of reasons not a tremendous leap.  In Universe X these loops are referred to as 'antimatter'.  The article 'Darkness' pertains to these type of loops.

- they could do neither:
Given the cellular automata analogy to Universe X, it's easy to imagine the existence of loops that don't affect the aexels; that neither create or destroy them.  However, perhaps it is necessary to consider the possibility that no such loops exist or at least they are less prevalent than one might initially assume.  The 'Equivalence' article discusses these possibilities further.

Generally, the loops that destroy aexels can be thought to have a destruction coefficient, which measures the rate at which the aexels are destroyed.  In Universe X, this destruction coefficient is called 'mass'.  As matter destroys the aexels, more aexels get pulled in because the aether's crystalline nature does not allow the individual aexels to ever get too far apart.

Imagine a round table with a table cloth upon it.  On the table cloth there are plates and glasses and silverware.  In the center of the table is a little hole.  A person crawls under the table and grabs the table cloth through the hole and then begins to pull the table cloth through the hole.  All of the items on the table will begin to slide towards the center of the table.  The dishware sitting on the table cloth will appear to be 'attracted' to the center.

In Universe X as various concentrations of matter continually destroy the aether between one another that matter itself will continually tend to clump together.  As that clump of matter gets bigger and bigger (or perhaps more precisely, more and more dense) the velocity at which the aether is pulled towards the clump will increase.

At some point, certain clumps in Universe X get so big (dense) and the velocity of the aexels flowing towards the clump becomes so great that a signal moving at one aexel per tic ('the speed of light') will not be able to escape the clump.  In Universe X, any clump that draws aether in at the speed of light is referred to as a black hole.





";

"Dilation" = "Dilation

Perhaps one of the most magical aspects of our universe is the phenomenon of time dilation.

In our universe time dilation is the variation in the perceived rate of time of various frames of reference based on their relative velocity to one another as well as the relative difference in their gravitational field strength.  That the rate of time itself can vary in our universe is severely magical in and of itself.

But, perhaps the most magical aspects of time dilation arise from the fact that in our universe there are no special frames of reference.  For example, two space ships traveling parallel to one another in opposite directions near the speed of light will both note that their clocks are running at a different rate than the other ship's clocks.  But, the really weird part is that both ships will see their own clock running faster and the opposing ship's clocks moving slower.

In Universe X, however, no such time dilation occurs.  There is however an analogous phenomenon, which is perhaps better described as 'animation dilation'.

Previously, the stable state loops of Universe X have been discussed as single entities.  However, the loops themselves have properties of their own and are able to interact with other loops in order to create increasingly large and complex composite systems.

In the Gravity article a classification of loops was created based on whether the loops created aexels (matter), destroyed aexels (antimatter) or did neither.  For the purposes of the Dilation and Contraction articles let's create a second classification: loops that translate at the speed of light (one aexel per tic) and loops that translate at less than the speed of light.

It would be nice to give names to these two classes, but there aren't great analogous names from our Universe that can be used.  One could almost use the term 'boson' for speed of light travelers and 'fermion' for sub-light travelers, but some bosons (such as W, Z and Higgs) move at less than the speed of light.  Still, perhaps, they can be a model for new names in Universe X.

It may be the case that all translation in Universe X is at one aexel per tic.  But, that some loops move directly in a straight line and therefore the loop itself translates at the speed of light and other loops have internal motion that alternates back and forth in some manner causing the net speed of translation to be less than the speed of light.

As such, let's refer to those loops that translate directly in a straight line (at the speed of light) as 'edisons' (ed-i-sans) and those loops that translate in some sort of alternating fashion (at less than the speed of light) as 'teslons' (tes-lans).

In Universe X teslons can interact with one another in order to create increasingly complex composite systems.  The interaction of these teslons will entirely be mediated by edisons.  Therefore the rate that the teslons will animate will entirely be a dependent on the the amount of time it takes the edisons to move back and forth between them.

Exactly how this happens in Universe X is still a subject of speculation, but in broad strokes, teslons continually generate edisons.  When one of these edisons hits another teslon, the edison affects that teslon's rate of translation across the aexel field.

For example, consider a teslon that is stationary on a field of stationary aexels (ignore gravity for a moment).  An edison traveling from elsewhere is moving towards the teslon.  When the edison hits the teslon (and is absorbed) the teslon begins to translate across the stationary field of aexels.

In this way, complex static or dynamic systems of teslons can be formed.  The rate at which a dynamic system will animate will be highly dependent on the amount of time it takes edisons to travel back and forth from teslon to teslon.

For two stationary teslons separated by a fixed number of aexels the edisons will travel between them at one aexel per tic.  However, if the teslons are both translating across the aexel field, the amount of time it takes edisons to move between them will vary based on the direction of motion of the edisons relative to the translating motion of the teslons across the aexel field.

In some cases the time will be less, in others the time will be more, but in all cases the round trip time of an edison between the teslons will increase as the rate of translation increases.  This increased round trip time will result in a slow down of the rate of the animation of the dynamic system of loops.

This dilation in Universe X is substantially different than the dilation of our universe.  For one thing, there IS a special frame of reference in Universe X.  A system will animate most quickly when it is not translating across the aexels at all, allowing the edisons to move most quickly between the teslons.

In Universe X dilation is not an observational phenomena.  It is a real physical phenomena that is entirely dependent on a system's rate of translation.  A system not translating at all will animate quickest; other systems will animate slower and slower as their rate of translation increases towards the speed of light, i.e. one aexel per tic.

In Universe X, two observers translating across the aexels in different frames will both agree on the relative animation rate of the two systems.  Both will see a fast system and a slow system and they will both agree on which is which.  There is no twin paradox in Universe X.

Let's try to calculate the animation dilation in Universe X as a function of the translational velocity of a system across an aexial field.  Two loops are arranged perpendicular to the aexial flow (north / south).  A signal traveling at c is sent out from one to the other and back.

<<DilaSketch>>

The question is how long does this roundtrip journey take?

First, let's look at the case where v = 0, the loops are not moving at all relative to the aexial field.  In this case the total distance traveled is 2d at a speed of c and total time, t = 2d/c.

In the second case, the loops are translating across the aexels at some non-zero 'velocity' (aexels/time), therefore the signal must travel a greater distance along the aexial field in order to complete its journey.  The journey north takes time, t_n.  The signal therefore travels c * t_n while the system moves v * t_n.  Using the Pythagorean theorem we then get:

<<Dilation>>

So, for a system of loops translating across an aexial field the signals traveling between loops will take longer and therefore the animation of that system will slow down entirely as a function of the rate of translation (aexels / time) across the aexels and that slowing down will be by the (perhaps familiar) equation above.





";

"Contraction" = "Contraction

Length Contraction is a phenomenon that causes all things to shrink in the direction of motion or in the direction of gravity.

In our universe, length contraction, similar to time dilation, has no special frames of reference, length contraction is an observational phenomena.  Two parallel spaceships passing each other at high speed will both see meter sticks on the other ship as being smaller then their own.

In Universe X, however, length contraction is a physical phenomenon and like dilation, is entirely a function of the rate of translation of a system across an aexel field.  A system that is not translating across an aexel field will experience no length contraction at all.  However, a system that is translating across an aexel field will experience a contraction in the direction of translation (or aexel flow from the perspective of the system itself) that is entirely a function of the rate of that translation.

In our universe there is a feature of nature called Lorentz covariance which indicates that the speed of light is constant across all frames of reference.

In Universe X this concept would appear to break down quickly.  For any system that is translating across an aexel field it would seem that the speed of light parallel to the direction of the aexel flow would be different than the speed of light perpendicular to the flow.

Certainly, in Universe X, the speed of light is always one aexel per tic.  But, since the aexels themselves can move and since they can vary in density it would seem it might be easy to detect variations in the distance traveled per time.

However, Lorentz covariance also holds in Universe X, just as it does in our universe.  And it does so because of length contraction.

In the Dilation article we calculated the increased amount of time needed to bounce a signal moving at the speed of light off a mirror and back when the signal is sent out orthogonal to the direction of translation (north / south).

For this article let's now repeat the same calculation but for a signal sent out parallel to the direction of translation (east / west).  Let's start by calculating when the velocity of translation is zero.

<<ContraSketch>>

In this case the signal travels 2d (the distance to the mirror) at a velocity of 'c' (the speed of light), so total time, t is 2d/c.  Now let's start translating the same system over the aexel field.

While the signal is moving to the right it is 'chasing' the mirror' therefore the total distance it needs to cover is 'd' the distance to the mirror plus v*t_e, v being the velocity of translation and t_e being the time needed to hit the mirror moving to the right.  Let's calculate that time, t_e:

<<ContraEast>>

Once the signal bounces off the mirror back to the source, the source will be moving towards the signal so the total distance that needs to be covered is d minus v*t_w, the translation velocity times the time needed to return to the source.  Let's calculate that time t_w:

<<ContraWest>>

The total time, t' is equal to the sum of t_e and t_w.  Let's compare it to the time when the system is not translating at all.

<<Contra>>

For the orthogonal case we saw that the time increased by a factor of gamma, but in this parallel case the time is increasing by a factor of gamma squared.  Which would mean that for a translating system two signals sent out at the same time, both bounced off a mirror 1 meter away one orthogonal to the direction of translation, one parallel, the two signals would return at different times.  Unless...

Length Contraction occurs and the length of things in the direction of translation are reduced by a factor of gamma.  In that case both signals would return at the exact same moment and the 'speed of light' would appear to be the same in both directions.

The amount of contraction precisely masks the change in the speed of light caused by the flow of aexels.  In Universe X, a meter stick's length itself is a function of the speed of light.  As the speed of light changes; the meter stick's length changes.

Measuring the speed of light with a meter stick is essentially a tautological exercise.  A meter stick uses the speed of light to measure the speed of light and not shockingly it always comes out to be: the speed of light.

One other important thing to note, is that this contraction only applies to the physical items in the system that is translating, not to the rest of the non-translating universe that happens to lie along the direction of translation.

If a ship is heading towards some distant star, the amount of meter sticks that will fit between the ship and the star will increase as the translation speed of the ship increases.  The distance to the star itself will not contract and therefore the distance to the star will appear to increase as the ship's speed increases.





";

"Darkness" = "Darkness

Astronomers observing our own universe have noticed some problems with our current understanding of Physics.  There are two major issues: One, is that for unknown reasons the universe itself appears to be expanding.  The other is that the galaxies of our universe appear to have greater gravitational pull than they should based on the amount of mass that they contain.

From these observations they realized that our universe contains dark energy which causes the universe to expand and dark matter which gives the galaxies more mass than they appear to have.  The mass of dark energy and dark matter account for about 96% of the mass of the universe.  Our observable universe only accounts for 4% of what exists.  96% percent of the mass of the our own universe has never been observed.

Luckily, once again, Universe X isn't nearly so magical.

Previously, we have mentioned 3 types of stable state loops:

- Loops that don't affect aexels
- Loops that destroy aexels
- Loops that create aexels

Tentatively, we have named 'loops that don't affect aexels' as photons and 'loops that destroy aexels' as matter.  Again, it is perhaps somewhat speculative, but let's name 'loops that create aexels' as antimatter.

In our universe, there is a phenomenon known as pair creation.  Of the many known particles of our own universe each has an antiparticle that is equal and opposite in every way.  It has been observed that at times a particle and its antiparticle will be spontaneously created.  Similarly, if a particle and its antiparticle meet they will each be entirely destroyed.

If we assume that this is also the case in Universe X, then perhaps all matter and antimatter was created through pair creation.  And perhaps the total matter in Universe X is equal to the total antimatter in Universe X.  Alternatively, perhaps it is possible that Universe X was initially seeded with more matter or more antimatter.

If the amount of matter and antimatter is equal in Universe X and always remains so because of pair creation and pair destruction.  And if antimatter creates aexels and creates them at the same rate at which matter destroys them, then perhaps the total amount of aexels in Universe X is a constant.

Matter in Universe X is continually destroying aexels drawing other matter towards it causing it to clump up.  Perhaps the antimatter of Universe X is continually creating aexels causing the antimatter to spread apart.

And while the matter of Universe X clumps up into galaxies and stars and planets continually drawing in aexels as a drain in a tub continually draws in water.  The antimatter of Universe X spreads out as a dust permeating the space between those galaxies continually creating new aether between the galaxies causing the space between them to continually increase.

And just as the destruction of aexels in Universe X looks like a pull.  The creation of aexels in Universe X looks like a push.  The antigravity of the antimatter pushing on the galaxies from the outside making it appear as if they have more mass than they actually do.





";

"Equivalence" = "Equivalence

One topic that has been conspicuously missing from this discussion of Universe X is the mass-energy equivalence principle.  Sometimes, E=mc² is incorrectly thought of as a conversion formula; representing the ability to convert energy into mass or mass into energy at the stipulated rate.  However, the mass-energy equivalence principle says something dramatically more bold: It says that the total mass of a system and the total energy of a system are always related to one another by the c² factor.  This strongly implies that mass and energy arise from the same phenomenon.

In our universe both mass and energy are conserved quantities.  Our own sun loses about 4 x 10^9 kg every second through the fusion process which radiates about 3.6 x 10^26 joules of photons.  If mass is a conserved quantity and if photons are massless, where did that mass go?  It is argued that a box with massless mirrored interior walls with light bouncing around inside will have a mass equal to the energy of the photons inside divided by c².  It seems that somehow massless photons do in fact have mass in some manner of thinking.

So, if we assume that all of this also holds true of Universe X, what’s going on?  Previously, in the Gravity section the loops of Universe X where divided into 3 categories: loops that destroy aexels, loops that create them and loops that do neither.  For the loops that destroy and create aexels they have a property known as ‘mass’ which describes the rate at which the loop destroys or creates aexels.  In Universe X the concept of gravitational mass, really is just the measure of the rate of the destruction of aexels (anti-mass is the measure of the rate of their creation).

As mentioned before, the phenomenon of gravity can not directly cause a loop to translate across the aexels.  Only electric / magnetic phenomenon can cause a loop to translate.  So what is energy?  Energy is that which allows a loop to translate across the aexeal field.  Energy is motion.

If energy and mass are the same phenomenon then perhaps its not some magical mass / anti-mass property that determines the rate of aexeal destruction / creation, but rather it is motion itself which destroys / creates aexels.  And as such perhaps the set of “loops that don’t affect aexels” is null.  Some loops have internal rotational motion that allows them to destroy / create aexels in place.  While other loops (photons) have entirely linear motion, destroying aexels along the way, but not destroying / creating any aexels internally.

And as such photons which don’t appear to have mass (i.e., don’t destroy aexels internally), do still contribute to the destruction of aexels, which is to say do still contribute to the mass of a system.




";

"OddsAndEnds" = "Odds and Ends

The following is a handful of calculations and smaller discussions about Universe X; topics include:

- Dilation in Universe X
- Dilation: Surface of a Sphere
- Dilation: Falling from Infinity
- Does Antimatter Fall?
- LIGO


Dilation in Universe X

As discussed in the Dilation section, dilation in Universe X is not of time, but rather is of the rate of animation, i.e., the rate that a system of loops progresses.  This rate of animation is entirely dependent on the amount of time it takes signals traveling at one aexel per tic (i.e., the speed of light, which we'll call 'c') to complete a round trip journey between two given loops.

Let's look at two loops arranged perpendicular to the aexial flow.  A signal traveling at c is sent out from one to the other and back.

<<Dilation>>

The question is how long does this roundtrip journey take?

First, let's look at the case where v = 0, the loops are not moving at all relative to the aexial field.  In this case, d = ct; or t = d/c.

In the second case, the loops are translating across the aexels at some non-zero 'velocity' (aexels/time), therefore the signal must travel a greater distance along the aexial field in order to complete its journey.  If the one way journey takes t', then the loops move vt' and the signal moves ct'.  Using the Pythagorean theorem we then get:

<<DilaDeriv>>

So, for a system of loops translating across an aexial field the signals traveling between loops will take longer and therefore the animation of that system will slow down entirely as a function of the rate of translation (aexels / time) across the aexels and that slowing down will be by the (perhaps familiar) equation above.


Dilation at the Surface of a Sphere

Now that we know what the dilation will be as a function of the translation rate across the aexels; let's now calculate what the dilation would be at the surface of a non-rotating sphere.

As discussed in the Gravity section, gravity in Universe X is not a force, but rather is a result of the destruction and creation of aexels and the pulling and pushing that that causes on the aethereal fabric.  Gravity alone, therefore, cannot directly initiate the translation of a loop across an aexial field.  All it can do is pull on the aexial field itself.

Let's take an empty universe and place a planet P and a tennis ball B in it, infinitely far apart, both of which are not translating across the aexial field at all.  If we assume Newton's law of gravitation to be empirically true of Universe X, we can calculate the velocity of the tennis ball once it hits the surface of the planet.  Since gravity can not directly cause a translation across the aexels, the velocity of the tennis ball must equal the velocity of the aexels upon which it is sitting.

<<Escape>>

This gives us the velocity of the aexels flowing into the planet at its surface.  Any system at rest on the planet's surface will have the aexels flowing through it at that velocity, therefore we can plug that velocity into the previous dilation equation in order to get the dilation at the surface.

<<SurfDila>>

Coincidently, the dilation at the surface of a non-rotating sphere in Universe X is the same as that for our Universe.


Dilation while Falling from Infinity

In the previous calculation we dropped a tennis ball from infinity in order to calculate the velocity of the aexels flowing into the planet at the surface so that we could calculate the dilation for a system at rest on that surface.  What about the dilation for the tennis ball itself?

In our Universe, this calculation might be pretty challenging, since time dilation is both a function of velocity and gravity and since both the velocity and gravity is constantly changing throughout the tennis ball's journey.

However, in Universe X, this calculation is quite easy.  Dilation in Universe X is solely a function of the translating velocity over the aexial field.  In Universe X, throughout the journey from infinity down to the planet's surface, the tennis ball's translation velocity remains zero; it is simply flowing down along with the aexels.  And since, throughout the journey, there is never any translating velocity, there is therefore never any dilation.

<<InfinDila>>


Does Antimatter Fall?

In our Universe, it is an open question and a topic of much speculation of how an antimatter tennis ball would behave in the Earth's gravitational field.  Perhaps, matter and antimatter are akin to positive and negative charges and antimatter will rocket up into the sky, falling upwards due to a negative mass.  Or perhaps its mass is no different than a matter tennis ball's mass and it will fall down normally.

As for matter tennis balls, Galileo famously explained that all objects regardless of their mass fall at the same rate.  A recent satellite called MICROSCOPE ran an experiment that found no difference in the acceleration of objects of different masses to an accuracy of 10^14.

But, let's perhaps look at this question in Universe X.  In Universe X, gravity is not a force, but rather it is the pulling on the aether by things with mass or the pushing on the aether by things with antimass.  For Universe X, Newton's law of gravitation would be better rendered as:

<<Gravity>>

which is an acceleration not a force.  If we consider a matter tennis ball (mass), antimatter tennis ball (antimass) and photon tennis ball (no mass) in the strong gravitational field of a large planet; all would be sitting on the same aether, all being pulled in at the same rate.

However, while the planet, by far is doing most of the pulling, the tennis balls themselves can also affect the aether; the matter tennis ball pulling; the antimatter tennis ball pushing and the photon tennis ball doing neither.  Given the mass of the Earth and the mass of a tennis ball the amount of pulling or pushing a tennis ball would do is on the order of 10^24 less than that of the planet; 10 orders of magnitude less than our most sensitive test to date.

So, while if we could use our current tests in Universe X, the 3 tennis balls would seem to fall at the same rate, there would perhaps come a time where the very slight differences could be measured; with the matter tennis ball falling the fastest, the photon tennis ball coming next and the antimatter tennis ball falling the slowest.


LIGO

In the current understanding of Universe X there are really two separate realms.  There are the aexels themselves and there are the loops which live on top of the aexels.  The aexels generally deal with the gravity of Universe X, where as the loops generally deal with the 'standard model' of Universe X.

And in this current understanding of Universe X, the only interplay between the two realms is the creation and destruction of the aexels by the loops.  Since the aexels can move and vary in their density, it is possible for compression waves to travel through the aether.

In our Universe, compression waves, such as sound waves, move through various materials at various speeds.  Depending on the dynamics of aexels themselves, it seems that any arbitrary velocity could be possible for such compression waves traveling through the aether of Universe X.

The LIGO experiment recently announced that they were not only able to detect gravity waves in our universe, but they were able to measure the velocity of the wave because it was paired with an e/m phenomena due to two neutron stars colliding.  And while the gravity wave didn't hit precisely at the same time as the e/m wave, it hit close enough to strongly indicate that the speed of light played a significant part in the dynamics of gravity waves.

Admittedly, I was a bit surprised by this result.  Certainly, there is nothing in Universe X that says that an aexial compression wave can't move at the speed of light, but there is also nothing that says that it must.  The fact that it does, seems to indicate that the tic time delay in transferring a signal from one aexel to the next must somehow be relevant in the dynamics of the aexels themselves, not solely for the loops set on top of them.

As a result, this seriously calls into question the idea that a gravity clock in Universe X (as described in the Dilation section) would not undergo dilation.



";

"Questions" = "Questions";

"GameOfLife" = "This is a cellular automata lab.  Here users can run predefined automata as well as define their own.

Above is the cellular automata definition panel.  The automata are defined using the Oovium visual programming language.  Here, Conway's Game of Life is being defined.  Tapping the aether picker in the upper left hand corner enables one to switch between various cellular automata and also to define their own by hitting the 'new' button.

The play / pause button will put the automaton into motion (or pause it).  The reset button will stop the automaton and reinitialize the cells.  The guide lines button will turn on and off the zoom indicator boxes.

There is a time dilator slider, which allows the steps per second to be adjusted, speeding or slowing the system between 1 step per second up to 60 steps per second.

The automata itself is displayed via 3 world views.  The top large view is the main world view panel.  Tapping this panel will cause a 2x zoomed section of the world to appear in the second panel.  Tapping the second panel will cause a 4x zoomed section to appear in the third panel.

Game of Life

In 1970, British Mathematician, John Conway devised the cellular automaton known as the Game of Life.  Conway was attempting to create a much simpler version of a system previously devised by John von Neumann in the 1940s.

The rules to Conway's Game of Life are fairly straightforward: Take a plane made up of square cells.  Each cell can either be on or off.  Each cell has 8 neighbors, the 8 cells directly surrounding it.  If two of a cell's neighbors are 'on' then the cell's state is unchanged.  If three of the cell's neighbors are 'on' then the cell's state is turned / remains on.  In all other cases the cell's state is turned / remains off.

Some things to look for:

- Look for static patterns (called still lifes).  These are any shapes that repeat each step, i.e., stay exactly the same each step.  One common still life is the 'block', which is 4 pixels situated in a square.

- Look for any dynamic patterns.  The most common dynamic pattern is a bar 3 cells long.  It will continually iterate between horizontal and vertical.  This loop is called a 'blinker'.  The blinker is by far the most common dynamic pattern.  There are a handful of other relatively common 2 step loops, such as 'beacons' and 'frogs'.

- About once every few runs a rather large 3 step loop called a 'pulsar' will develop.  In some cases a half pulsar will develop on the edge of the world.

- Perhaps the most famous loop is called the 'glider'.  The glider is a fairly common 4 step pattern, that has one important distinction from the above loops.  The glider is a translating pattern, which is to say it moves across the plane.

For the purpose of Universe X there are a number of important qualitative concepts illustrated by Conway's Game of Life that can be gleaned fairly quickly.  However, a shockingly large amount of research has been done into Conway's Game of Life and a few minutes with Google can open up this massive body of work to enable further research, if so desired.


";

"Demons" = "Demons

Another type of cellular automaton, is the cyclic cellular automaton devised by David Griffeath of the University of Wisconsin.  And while perhaps not quite as fruitful as Game of Life in generating complex systems, it does nicely illustrate a number of important qualitative concepts, in addition to making pretty cool pictures.

A cyclic cellular automaton again makes use of a plane tiled with square cells.  Each cell can be in one of n possible states (in this case 12) and has 4 neighbors; the cells directly above, below, left and right of it.

If any of the neighboring cells is in a state that is one more than the current cell (or 0 for a cell of state n-1), then the cell will be eaten and take on the state of the neighboring cell.  A cell can eat and be eaten in the same time step.  This allows loops to form that contain each of the n states.  These loops will create spirals called demons.


";

"Oovium" = "Oovium

Using the Oovium visual programming language it is possible to define custom cellular automata.

Double tapping on an empty area of the Oovium panel will create a new bubble.  By default an instance bubble will be created that allows the user to enter in a number or a calculation.  Using the bubble maker in the upper right of the Oovium panel, one can also create an IfBub which is a visual conditional or a MechBub which enables the creation of custom functions.

The workspace of Oovium is called an 'aether' (Oovium was created well before Universe X was discovered and the usage of the term aether is just a coincidence).  By default, each of the aethers in the automata lab are pre populated with an AutoBub, which allows one to define their own cellular automata.

The top area of the AutoBub represents a cell and its neighbors' current state: the neighborhood.  The bottom area represents the cell's new state which should be a calculation based on the current state of the neighborhood.

There is also a properties button which will allow for the number of states to be defined (between 2 and 32) and also allow for various colors to be selected for the different states.

More about learning how to use the Oovium visual programming language including tutorial videos can be found at oovium.com.  The full Oovium visual programming language is available for iPad and iPhone in the AppStore and for Mac in the Mac AppStore.


";

"KinematicsLab" = "Kinematics

Motion in our own universe can be described entirely by a vector which represents the velocity of a given object.  In Universe X, however there are two distinct forms of motion: translation across the aether and the flow of the aether itself.  In order to fully describe motion in Universe X, one must know both the translating vector and the aethereal flow vector, as well as the density and geometry of the aexels themselves.

This lab allows us to compare the motion of our Universe with that of Universe X.  The lab models an object frictionlessly moving inside a 2 dimensional box, elastically bouncing off the walls.

For Universe X, the model uses a regular hexagonal tiling to represent the aether.  The translational \"velocity\" vector represents the percent chance that the object will move to an adjacent cell each time step from 0 to 100 percent.  If the vector falls between two faces the chance of moving to either face is weighted based on the direction of the vector.  In this way motion in any arbitrary direction, not just the 6 cardinal directions can be achieved.  This random walk model is known as a Feynman checkerboard.

Perhaps the first thing one might note when comparing the two models is that motion in the Universe X model is quite jerky as opposed to the smooth motion of the model for our Universe.  However, the Universe X model is a statistical model and we are looking at both large aexels and large time steps.  As the density of aexels and time steps increase the motion will continually get more and more smooth until it would become difficult to differentiate the motion of the two systems.

In looking at the Universe X model there are two important things to note.  The first is that during collisions there can be a transfer between translating motion and flow motion.  For example, if we stop the translating motion entirely and point the aether directly downward (see Experiment B).  The particle will smoothly flow down along with the aether.  However, once the particle hits the bottom wall, the flow motion will be converted into twice the translating motion upwards, which when added to the flow motion will cause the object to move upwards at (statistically) the same velocity with which it moved downwards.

The other thing to note then is that as the density of aexels and time steps increases, the flow of the aether is irrelevant to the dynamics of the system.  I.e., a system where there is no aethereal flow will behave statistically the same as one in which there is an aethereal flow.

Although it is the case that God plays dice with our Universe, it is an open question as to whether God plays dice with Universe X.  In this situation, it was necessary for the model to employ a random number generator in order to model the motion.  Arbitrary directions of translation could not be achieved without this randomness.  However, this does not imply that such randomness is a necessary component of Universe X.

In this case the aether is modeled simplistically with regular 2 dimensional hexagons.  However, one could imagine the actual distribution of 3 dimensional aexels in Universe X as being quite irregular.  Potentially an entirely deterministic way of jumping from aexel to aexel would appear random due to the unknown hidden variables which are the geometry of the aexels themselves.



";

"GravityLab" = "Gravity

This is the long overdue first attempt to model the Aexels themselves.  Certainly, the ideal will be to create a quantitative model, however there are way too many open questions to attempt that currently.  As such the goal at this point is to create a qualitative model of Universe X and its aexels.  The hope being to create a visceral picture of Universe X; a thousand words per frame at 60 frames per second.

This first modest model attempts to recreate the dynamics of the aexeal fabric itself, the aether.  In this case the aexels can create bonds between each other.  The bonds have a relaxation distance; if they are too close they will push apart, too far they will pull together.  However, aexels that are double the relaxation distance from one another can not create bonds and if a bond already exists between them it will snap.

This model is entirely two dimensional and bonds can not cross one another.  When two bonds cross, the shorter bond will take precedence and snap the longer bond.  The aexels themselves have no concept of momentum; each bond creates a push or pull in the direction of the bond proportional to the distance from relaxation.  The aexel then jumps slightly in the direction of the sum of the pushes and pulls.

In this lab there are four preset experiments; the first three differ only in the number of aexels and the relaxation distance.  The last experiment implements Conway’s Game of Life on top of the dynamic lattice, giving a flavor of the possible interplay between the aexels and the loops sitting upon them.

Currently, this model does a respectable job of healing holes in the aethereal fabric.  The next step is to attempt to model gravity itself.  This will require a mechanism for creating and destroying aexels based on the loops on top.  In order to succeed the fabric probably needs to be even better at healing itself and realistically there will need to be a lot more aexels.  The key to adding more aexels will be continually increasing the performance of the algorithms being used here.




";


/*
 Localizable.strings
 Oovium
 
 Created by Joe Charlier on 1/21/12.
 Copyright (c) 2012 Aepryus Software. All rights reserved.
 */

/* name of the Oovium workspace */
"aether" = "aether";

/* remove all bubbles from the current aether */
"clear" = "clear";

"buy" = "buy";

/* internet URLs */
"links" = "links";
"help" = "help";

"album" = "album";

/* the Dropbox cloud service */
"dropbox" = "dropbox";

/* the iPad / iPhone or iPod touch */
"device" = "device";

/* log out of dropbox */
"logoff" = "logoff";

/* link to oovium.com */
"oovium" = "oovium";

/* online messageboard */
"forums" = "forums";

/* link to Oovium's twitter feed */
"twitter" = "twitter";

/* rate or review the app in the AppStore. */
"review" = "review";

/* bring up the about info (i.e., version and copyright) */
"about" = "about";

/* list of changes in the current version */
"whatsnew" = "what's new";

/* Oovium term describing a subset of gestures */
"anchoring" = "anchoring";
"tutorial" = "tutorial";

/* tutorial explaining Oovium basics */
"basics" = "basics";

/* tutorial explaining how to make Mind Maps */
"mapper" = "mapper";
"cancel" = "cancel";

"new" = "new";
"add" = "add";
"remove" = "remove";

/* include other aethers in the current aether, similar to import */
"includes" = "includes";
"replace" = "replace";

/* A sticker or tag affixed to an item to provide identifying or descriptive information. */
"label" = "label";
"copy" = "copy";

/* menu option that allows the user to change the color of a bubble */
"color" = "color";

/* menu option that allows the user to change the shape of a bubble */
"shape" = "shape";
"delete" = "delete";

"addParam" = "add param";
"removeParam" = "remove param";

/* set of functions that work on aggregate data (sum,count,average) */
"aggregate" = "footer";

/* text justification (center, right, left) */
"justify" = "justify";
"sum" = "sum";
"average" = "average";

/* a type of aggregate function which tallies a running total of a given column */
"running" = "running";
"none" = "none";
"left" = "left";
"center" = "center";
"right" = "right";

/* a list of nodes that flow into the current node */
"inputs" = "inputs";

/* a list of nodes that flow out of the current node */
"outputs" = "outputs";
"OK" = "OK";
"Yes" = "Yes";
"No" = "No";

"clearConfirm" = "Clear this aether completely?";
"deleteOneConfirm" = "Delete selected bubble?";
"deleteManyConfirm" = "Delete selected bubbles?";
"deleteColumn" = "Delete selected column?";
"deleteRow" = "Delete selected row?";

"bootupText" = "ANNOUNCING

** Oovium for Mac **

The conversion of Oovium to the desktop has recently been completed.  Oovium for Mac is now available in the Mac AppStore!

All the Oovium goodness you've come to know and love on the iPad (and iPhone) is now available on your computer, allowing you to share Aethers between all of your devices via Dropbox.

AepCalc, RPN calculator for Mac is also available.
";

"whatsnewText" = "What's New 1.1.4

** Oovium for Mac **
The conversion of Oovium to the desktop has recently been completed.  Oovium for Mac is now available in the Mac AppStore!  All the Oovium goodness you've come to know and love on the iPad (and iPhone) is now available on your computer, allowing you to share Aethers between all of your devices via Dropbox.

AepCalc, RPN calculator for Mac is also available.

BUBBLES:
- IfBub : A visual conditional that can be used instead of the in-bubble 'if' function.  Aside from its visual representation, it also has the advantage of only evalutating the appropriate resultant.  This makes the IfBub very useful in creating recursive functions without needing to use the Function data type.

- TailBub : A new type of a MechBub specifically designed for creating recursive functions, greatly simplifing the ability to create loops.  The TailBub's visual structure guides the user in creating a tail call optimized recursion which has performance advantages over MechBub recursion, but more importantly eliminates the 500 loop limit of the MechBub.  (The TailBub will process for up to 1 second, which allow for signficantly more iterations)

- CronBub : Allows for the creation of a timer that increments its value periodically based on input parameters.  The utility of the CronBub, is perhaps a bit limited at this point, but it will become an essential tool for modeling and animating with the arrival of the 2nd aspect of Oovium.

- TypeBub : Allows for the mapping of entities and relationships.  Currently, the TypeBub is not integrated with the other bubble types of Oovium and is a faint shadow of it's ultimate functionality.  However, it has been slipped into this version both as a preview of future attractions and because even in it's current form, it can be useful in creating some simple diagrams.

FUNCTIONS:
- [!,&,|] - the 'not' !, 'and' & and 'or' | operators have been added to the Lexicon

OTHER:
- The resolution of exported images has been increased to match the retina display.  There are still plans to create a vector output, but that hasn't been done yet.

- In conjunction with the conversion of Oovium to OS X, once again massive under-the-cover refactoring has occurred with this version, including the conversion to the ARC memory model, a revamp of the Hover mechanism, some tweaks to the Math engine and major restructing of the Bubble system to allow for easier creation of new Bubbles, although more work is still needed with that.";

"ooviumText" = "Welcome to Oovium

What if a person ignorant of all past calculation tools were to design from scratch an app for doing calculations that made full use of the technology and concepts available to us today?  What would that application look like?

Over the years Aepryus has had numerous ideas for applications.  Eventually, it was realized that six of these ideas were just six different aspects of the same program.  Oovium is that program.

Or rather, Oovium will become that program.  Oovium is a mathematical sandbox.  As of version 1.1, Oovium includes one of the six aspects; code named Bricklin; this aspect is the implementation of an object oriented spreadsheet.  Eventually, the other 5 aspects will be incorporated into Oovium, code named Crawford, Shazaam, Archimedes, Eddington and Mithrandir.";

"ooviumMmText" = "Oovium Mind Mapper

Designed to replace your white board; it allows you to place nodes on a field (the aether) and designate links between them. Each node can have multiple inputs and outputs (a directed graph).

Particular attention was given to creating a natural and elegant gesture suite that allows for quick and easy manipulations of the bubbles upon the aether.

Be sure to read up on Anchoring to learn about these gestures.";

"anchoringText" = "The Joy of Anchoring

The workspace of Oovium is an arbitrarily large 2 dimensional plane that allows users to place bubbles upon it.  This plane is referred to as the Aether.  As Bubbles are added to the Aether, it automatically resizes to accommodate all of the bubbles.  In using Oovium, there is an important class of gestures known as anchoring.

Anchoring is holding the Aether still with one finger while performing another action with a different finger.  These gestures are:

MOVE BUBBLE [Anchor+Drag:bubble]
Anchor with one finger, then drag a bubble with another.  The more fingers that you use, the more bubbles you can drag around.

CONTEXT MENU [Anchor+Tap:bubble]
Anchor with one finger and tap a bubble with another.  This will bring up a context menu for the bubble that will allow you to perform additional actions to the bubble, such as Label and Delete.

LASSO [Anchor+Drag:aether]
Anchor with one finger and drag another finger on empty space.  A yellow path will begin to render along the path of your second finger.  You will be able to select multiple Bubbles and then move them as a group or perform relevant context menu actions on all of them.

MOVE CURSOR [Anchor+Tap:expression]
While editing an expression, anchor with one finger and tap the expression with another.  The cursor will move to the location of the tap, allowing you to modify the expression at that location.";

"basics01" = "Double\nTap\nMe";
"basics02" = "The \"aether\" is your workspace.  You have just created an instance bubble on that aether.";
"basics03" = "Using the keypad input 5781 =";
"basics04" = "Double\nTap\nMe";
"basics05" = "You can enter full expressions into a bubble.";
"basics06" = "Input 84\U00D7114=";
"basics07" = "Double\nTap\nMe";
"basics08" = "Previous bubbles can be referenced from new bubbles.";
"basics09" = "Touch your first bubble";
"basics10" = "Hit the \U00D7 key";
"basics11" = "Now touch your second bubble";
"basics12" = "Hit the equal sign";
"basics13" = "Bubbles can be revisited and edited.";
"basics14" = "Hit the 5781 bubble";
"basics15" = "Using the backspace, change the number to 5783; hit =";
"basics16" = "Want to be able to access the context menu?  Want to be able to move a bubble or a collection of bubbles?  Read about anchoring! (in Help)";
"basics17" = "Hit the menu key (the red dot in the lower left corner)";
"basics18" = "Hit the aether key";
"basics19" = "Hit the clear key";
"basics20" = "Hit yes to clear your aether";

"mapper01" = "Tap the box in the upper right corner (the tool bar) and select the orange oval.";
"mapper02" = "Double\nTap\nMe";
"mapper03" = "The \"aether\" is your workspace.  You have just created a node on the aether.";
"mapper04" = "Type \"peanut butter\" and then hit return.";
"mapper05" = "The toolbar in the upper right determines what gets created when double tapping on the aether.  Tap the color tool (the left most one) and select purple.";
"mapper06" = "Double\nTap\nMe";
"mapper07" = "In the second node type \"jelly\" and then hit return.";
"mapper08" = "Feel free try a different color or shape combination before double tapping.";
"mapper09" = "Double\nTap\nMe";
"mapper10" = "In the third node type \"pb&j\" and then return.";
"mapper11" = "You can edit the text of a node by double tapping on it.";
"mapper12" = "Double tap on the pb&j node and add \"sandwich\", then hit return.";
"mapper13" = "Single tapping on a node will allow you to connect it to other nodes.";
"mapper14" = "Single tap on the \"pb&j sandwich\" node.";
"mapper15" = "Tap both the \"peanut butter\" and \"jelly\" nodes.  Hit \"OK\" to set the connections.";
"mapper16" = "Want to be able to change the shape or color of existing nodes?  Want to be able to move a bubble or a collection of bubbles?  Read about anchoring! (in Help)";
"mapper17" = "Hit the menu key (the red dot in the lower left corner)";
"mapper18" = "Hit the aether key";
"mapper19" = "Hit the clear key";
"mapper20" = "Hit yes to clear your aether";

"lexiconMain" = "Single tap a token to see its description.\n\nDouble tap a token to insert it into your current expression.";
"lexiconFilter" = "(filter)";
"lexOperator" = "operator";
"lexMisc" = "miscellaneous";
"lexPower" = "exponentiation";
"lexTrig" = "trigonometric";
"lexAdd" = "addition operator";
"lexSub" = "subtraction operator";
"lexMul" = "multiplication operator";
"lexDiv" = "division operator";
"lexMod" = "modulus operator";
"lexPow" = "power operator\n\nNegative Real inputs taken to non-integer powers will result in Nan.";
"lexDot" = "dot product operator";
"lexEqual" = "equal to\n\nComparison operators will return a 1 if true, a 0 if false.";
"lexNotEqual" = "not equal\n\nComparison operators will return a 1 if true, a 0 if false.";
"lexLess" = "less than\n\nComparison operators will return a 1 if true, a 0 if false.";
"lexLessEqual" = "less than or equal\n\nComparison operators will return a 1 if true, a 0 if false.";
"lexGreat" = "greater than\n\nComparison operators will return a 1 if true, a 0 if false.";
"lexGreatEqual" = "greater than or equal\n\nComparison operators will return a 1 if true, a 0 if false.";
"lexNot" = "unary not operator\n\nThis operator will return true (1) if the operand is false (0) and false (0) if the operand is true (not equal to 0).";
"lexAnd" = "and operator\n\nThis operator will return true (1) if both operands are also true (not equal to 0).";
"lexOr" = "or operator\n\nThis operator will return true (1) if either of the operands are true (not equal to 0).";
"lexFac" = "factorial";
"lexRound" = "round to nearest integer";
"lexFloor" = "The floor function shifts a value to the lessor of the two integers that it falls between (or the value itself if it is already an integer).";
"lexAbs" = "absolute value";
"lexMin" = "returns the lesser of two values";
"lexMax" = "returns the greater of two values";
"lexIf" = "if then else\n\nIf the 'if' parameter (1st) is true (evaluates to a non-zero value) then the 'then' parameter (2nd) will be returned; otherwise if it is false (evaluates to zero) then the 'else' parameter (3rd) will be returned.\n\nWithin Oovium, all parameters are evaluated first before being sent to their function.  However, this will cause recursive functions to always result in a stack overflow.  For recursive functions, it is necessary to use the 2nd form with Function type 'then' and 'else' parameters.  In the 2nd form, the function itself is the result and therefore only the appropriate version will be evaluated preventing the stack overflow.";
"lexSum" = "summation\n\nThis function will sum the results of the function parameter (3rd), by iterating that function using incrementing values of k.\n\nIn the first form k will iterate from the start parameter (1st) through the stop parameter (2nd).  In the 2nd form k will start with the start parameter (1st), but will continue to execute while the condition parameter (2nd) remains true.";
"lexRandom" = "returns a random integer from 0 to n-1";
"lexSqrt" = "square root (i.e., x^0.5)\n\nNegative Real inputs will result in NaN.";
"lexLn" = "natural logarithm (i.e., logarithm base e)\n\nInverse of the exp function.";
"lexLog" = "logarithm base 10\n\nInverse of the ten function.";
"lexLog2" = "logarithm base 2\n\nInverse of the two function.";
"lexExp" = "exponential, power of e (~2.71...) (e^x)";
"lexTen" = "power of 10 (10^x)";
"lexTwo" = "power of 2 (2^x)";
"lexSin" = "sine\n\nThe input angle should be in radians.";
"lexCos" = "cosine\n\nThe input angle should be in radians.";
"lexTan" = "tangent\n\nThe input angle should be in radians.";
"lexSec" = "secant\n\nThe input angle should be in radians.";
"lexCsc" = "cosecant\n\nThe input angle should be in radians.";
"lexCot" = "cotangent\n\nThe input angle should be in radians.";
"lexAsin" = "arcsine";
"lexAcos" = "arccosine";
"lexAtan" = "arctangent";
"lexSinh" = "hyperbolic sine";
"lexCosh" = "hyperbolic cosine";
"lexTanh" = "hyperbolic tangent";
"lexAsinh" = "hyperbolic arcsine";
"lexAcosh" = "hyperbolic arccosine";
"lexAtanh" = "hyperbolic arctangent";
